.homepage {
    background-color: var(--background-color);
    color: var(--text-color);
  }
  
  .homepage a {
    color: var(--text-color);
  }
  
  .homepage button {
    background-color: var(--text-color);
    color: var(--background-color);
    border: 1px solid var(--text-color);
  }
  
  .homepage button:hover {
    background-color: var(--background-color);
    color: var(--text-color);
  }
  
  .product-card {
    margin: 8px;
  }

  .product-img {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 300px; 
    background-color: #fff;
  }
  
  .product-img img {
    max-width: 100%; 
    max-height: 100%; 
  }

/* Stiluri pentru butoane din meniul de categorii */
.btn-category {
  background-color: transparent;
  border: 1px solid #ddd;
  padding: 10px 20px;
  margin: 0 10px;
  font-size: 14px;
  color: #919191;
  cursor: pointer;
  transition: background-color 0.3s, color 0.3s;
}

  .btn-category:hover {
    background-color: #f0f0f0;
    color: #000;
  }

  .btn-category:focus {
    outline: none;
    background-color: #ddd;
    color: #000;
  }

.active .btn-category {
  background-color: #8B2E57;
  color: white;
  border-color: #8B2E57;
}

  .active .btn-category:hover {
    background-color: #8B2E57;
  }

  /* =================================
   1) Basic Wishlist Button Styling
================================= */
.add-to-wishlist {
  position: relative; /* So we can absolutely-position the checkmark */
  display: inline-flex;
  align-items: center;
  justify-content: center;
  background-color: transparent;
  border: none;
  cursor: pointer;
  color: #999;
  transition: color 0.3s ease;
  outline: none; /* If you want a custom focus style, add it separately */
}

.add-to-wishlist:hover {
  color: #666; /* Slightly darker on hover */
}

/* Empty heart -> Filled heart color transition if desired */
.add-to-wishlist.active i.fa-heart {
  color: #e74c3c; /* Your filled heart color (red) */
  transition: color 0.3s ease;
}

/* =================================
   2) Checkmark Container
================================= */
.checkmark-container {
  position: absolute;
  top: 37%;
  left: 50%;
  width: 40px;
  height: 40px;
  transform: translate(-50%, -50%) scale(0.8);
  opacity: 1;
  pointer-events: none; /* Let clicks pass through to the button */
  transition: opacity 0.2s ease, transform 0.2s ease;
}

.checkmark-svg {
  width: 40px;
  height: 40px;
}

/* The checkmark path is initially hidden via dash offset */
.checkmark-path {
  stroke: var(--checkmark-color, #8b2e57); /* Green by default */
  stroke-dasharray: 48;     /* Approx length of the path */
  stroke-dashoffset: 48;    /* Start fully 'hidden' */
  transition: stroke 0.3s ease; /* Smooth color transition if dynamic */
}

/* Hide the heart while checkmark plays */
.add-to-wishlist.success i.fa {
  opacity: 0;
  transition: opacity 0.2s ease;
}

/* Animate drawing the checkmark path */
@keyframes draw-check {
  to {
    stroke-dashoffset: 0; /* end up fully drawn */
  }
}

/* =================================
   3) .success Class Triggers the Animation
================================= */
.add-to-wishlist.success .checkmark-container {
  opacity: 1;
  transform: translate(-50%, -50%) scale(1);
  /* We also do a bounce or pop effect using keyframes */
  animation: check-bounce 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

/* The actual line draw happens automatically once .success is applied */
.add-to-wishlist.success .checkmark-path {
  animation: draw-check 0.5s forwards ease-out;
}

/* Keyframe for a slight bounce/pop effect */
@keyframes check-bounce {
  0% {
    transform: translate(-50%, -50%) scale(0.8);
  }
  70% {
    transform: translate(-50%, -50%) scale(1.2);
  }
  100% {
    transform: translate(-50%, -50%) scale(1);
  }
}


 /* =================================
   1) Basic Cart Button Styling
================================= */
.add-to-cart {
  position: relative; /* So we can absolutely-position the checkmark */
  display: inline-flex;
  align-items: center;
  justify-content: center;
  background-color: transparent;
  border: none;
  cursor: pointer;
  color: #999;
  transition: color 0.3s ease;
  outline: none; /* If you want a custom focus style, add it separately */
}

.add-to-cart:hover {
  color: #666; /* Slightly darker on hover */
}

/* Empty heart -> Filled heart color transition if desired
.add-to-cart.active i.fa-shopping-cart {
  color: #e74c3c; 
  transition: color 0.3s ease;
} */

/* =================================
   2) Checkmark Container
================================= */
.checkmark-container {
  position: absolute;
  top: 37%;
  left: 50%;
  width: 40px;
  height: 40px;
  transform: translate(-50%, -50%) scale(0.8);
  opacity: 1;
  pointer-events: none; /* Let clicks pass through to the button */
  transition: opacity 0.2s ease, transform 0.2s ease;
}

.checkmark-svg {
  width: 40px;
  height: 40px;
}

/* The checkmark path is initially hidden via dash offset */
.checkmark-path {
  stroke: var(--checkmark-color, #8b2e57); /* Green by default */
  stroke-dasharray: 48;     /* Approx length of the path */
  stroke-dashoffset: 48;    /* Start fully 'hidden' */
  transition: stroke 0.3s ease; /* Smooth color transition if dynamic */
}

/* Hide the heart while checkmark plays */
.add-to-cart.success i.fa {
  opacity: 0.0;
  transition: opacity 0.2s ease;
}

/* Animate drawing the checkmark path */
@keyframes draw-check {
  to {
    stroke-dashoffset: 0; /* end up fully drawn */
  }
}

/* =================================
   3) .success Class Triggers the Animation
================================= */
.add-to-cart.success .checkmark-container {
  opacity: 1;
  transform: translate(-50%, -50%) scale(1);
  /* We also do a bounce or pop effect using keyframes */
  animation: check-bounce 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

/* The actual line draw happens automatically once .success is applied */
.add-to-cart.success .checkmark-path {
  animation: draw-check 0.5s forwards ease-out;
}

/* Keyframe for a slight bounce/pop effect */
@keyframes check-bounce {
  0% {
    transform: translate(-50%, -50%) scale(0.8);
  }
  70% {
    transform: translate(-50%, -50%) scale(1.2);
  }
  100% {
    transform: translate(-50%, -50%) scale(1);
  }
}
