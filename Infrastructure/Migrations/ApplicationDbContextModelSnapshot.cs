// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Aggregates.UserAggregate.Entities.UserAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserAccountCredentialsEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("UserAccountRole")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserAccountCredentialsEmail");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("Domain.Aggregates.UserAggregate.Entities.UserAccountCredentials", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Email");

                    b.ToTable("UserAccountCredentials");
                });

            modelBuilder.Entity("Domain.Aggregates.UserAggregate.Entities.UserAccount", b =>
                {
                    b.HasOne("Domain.Aggregates.UserAggregate.Entities.UserAccountCredentials", "UserAccountCredentials")
                        .WithMany()
                        .HasForeignKey("UserAccountCredentialsEmail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserAccountCredentials");
                });
#pragma warning restore 612, 618
        }
    }
}
